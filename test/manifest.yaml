apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: api-gateway
spec:
  selector:
    istio: ingressgateway # Используем Istio ingress gateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: api-virtualservice
spec:
  hosts:
    - "*"
  gateways:
    - api-gateway
  http:
    - match:
        - uri:
            prefix: /api/v1 # Все запросы с /api/v1 идут в Flask
      route:
        - destination:
            host: flask-service
            port:
              number: 5000
    - match:
        - uri:
            prefix: /api/v2 # Все запросы с /api/v2 идут в дополнительный Python-сервис
      route:
        - destination:
            host: python-service
            port:
              number: 5000
    - match:
        - uri:
            prefix: / # Остальные запросы направляются в React
      route:
        - destination:
            host: react-service
            port:
              number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-deployment
  labels:
    app: react-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-app
  template:
    metadata:
      labels:
        app: react-app
    spec:
      containers:
        - name: react-container
          image: povarovaa/react-app:latest # Укажите ваш образ
          ports:
            - containerPort: 3000
          env:
            - name: REACT_APP_FLASK_URL
              value: "/api/v1"
            - name: REACT_APP_PYTHON_URL
              value: "/api/v2"

---
apiVersion: v1
kind: Service
metadata:
  name: react-service
spec:
  selector:
    app: react-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  labels:
    app: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-container
          image: povarovaa/flask-app:latest # Укажите ваш образ
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
spec:
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-deployment
  labels:
    app: python-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-app
  template:
    metadata:
      labels:
        app: python-app
    spec:
      containers:
        - name: python-container
          image: povarovaa/python-app:latest # Укажите ваш образ
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: python-service
spec:
  selector:
    app: python-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
